<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/KATBeaconManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/KATBeaconManager</TokenIdentifier>
			<Abstract type="html">A KATBeaconManager is responsible for the beacon interaction and callbacks to the app that integrates the SDK. In general it should be used as a shared object.</Abstract>
			<DeclaredIn>KATBeaconManager.h</DeclaredIn>
            
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/KATBeaconManager/shared</TokenIdentifier>
			<Abstract type="html">A shared version of the KATBeaconManager</Abstract>
			<DeclaredIn>KATBeaconManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype)shared</Declaration>
			
			<ReturnValue><Abstract type="html">an previous instantiated instance of the KATBeaconManager</Abstract></ReturnValue>
			<Anchor>//api/name/shared</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KATBeaconManager/initWithConfiguration:</TokenIdentifier>
			<Abstract type="html">Inits the KATBeaconManager</Abstract>
			<DeclaredIn>KATBeaconManager.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithConfiguration:(KATBeaconConfiguration *)configuration</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">trigger configuration</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">instancetype a KATBeaconManager instance with configuration settings</Abstract></ReturnValue>
			<Anchor>//api/name/initWithConfiguration:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KATBeaconManager/startWithHandler:</TokenIdentifier>
			<Abstract type="html">Starts monitoring/ranging for beacons and makes calls to the block callback.
This also depends on the beacon configuration on the backend.</Abstract>
			<DeclaredIn>KATBeaconManager.h</DeclaredIn>
			
			<Declaration>- (void)startWithHandler:(KATAdvertHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>handler</Name>
					<Abstract type="html">the callback function when a beacon action is fired</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">void</Abstract></ReturnValue>
			<Anchor>//api/name/startWithHandler:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KATBeaconManager/debugWithHandler:</TokenIdentifier>
			<Abstract type="html">The handler gets called at different locations to help debugging.
This also depends on the beacon configuration on the backend.</Abstract>
			<DeclaredIn>KATBeaconManager.h</DeclaredIn>
			
			<Declaration>- (void)debugWithHandler:(KATDebugHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>handler</Name>
					<Abstract type="html">the callback for various debug calls</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">void</Abstract></ReturnValue>
			<Anchor>//api/name/debugWithHandler:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KATBeaconManager/stop</TokenIdentifier>
			<Abstract type="html">Stops monitoring and ranging beacons, it does not destroy the object.
Calling the startWithHandler: will activate the monitoring/ranging again.</Abstract>
			<DeclaredIn>KATBeaconManager.h</DeclaredIn>
			
			<Declaration>- (void)stop</Declaration>
			
			<ReturnValue><Abstract type="html">void</Abstract></ReturnValue>
			<Anchor>//api/name/stop</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
        
	</File>
</Tokens>